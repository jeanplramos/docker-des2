version: '3'

services:
  db:
    image: mysql
    build: 
      context: ./mysql
      dockerfile: ./Dockerfile
    container_name: db
    command: --innodb-use-native-aio=0
    restart: always
    tty: true
    environment:
      - MYSQL_DATABASE=dockerdes2
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - des2-mysql-app

  app:
    image: node:15
    build: 
      context: .
      dockerfile: ./Dockerfile
    container_name: app
    networks:
      - des2-mysql-app
      - des2-nginx-app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s node /usr/src/app/index.js
    tty: true
    ports: 
        - 3000:3000
    restart: always
    depends_on:
      - db

  nginx:
    image: nginx:1.20.0-alpine
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    entrypoint: dockerize -wait http://app:3000/healthcheck -timeout 20s ./docker-entrypoint.sh nginx -g "daemon off;"
    ports: 
      - 8080:80
    networks: 
      - des2-nginx-app
    restart: always
    depends_on:
    - app
  

networks:
  des2-mysql-app:
    driver: bridge
  des2-nginx-app:
    driver: bridge
